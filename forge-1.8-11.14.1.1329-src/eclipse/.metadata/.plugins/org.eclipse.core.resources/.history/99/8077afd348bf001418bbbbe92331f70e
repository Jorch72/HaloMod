package halocraft;

import org.lwjgl.opengl.GL11;

import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.ScaledResolution;
import net.minecraft.client.renderer.Tessellator;
import net.minecraft.client.renderer.WorldRenderer;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.ItemArmor;
import net.minecraft.item.ItemStack;
import net.minecraft.util.ChatComponentText;
import net.minecraft.world.World;

public class HaloArmor extends ItemArmor {

	public HaloArmor(ArmorMaterial material, int renderIndex, int armorType) {
		super(material, renderIndex, armorType);
		setCreativeTab(CreativeTabs.tabCombat);
	}
	@Override
	public String getArmorTexture(ItemStack stack, Entity entity, int slot, String layer){
		if(stack.getItem().equals(halocraft.Main.SpartanHelmet)|| stack.getItem().equals(halocraft.Main.SpartanChestplate)|| stack.getItem().equals(halocraft.Main.SpartanBoots)){
			return "halocraft:textures/armor/HaloArmor_layer_1.png";
		}
		
		if(stack.getItem().equals(halocraft.Main.SpartanLeggings)){
			return "halocraft:textures/armor/HaloArmor_layer_2.png";
		}
		if(stack.getItem().equals(halocraft.Main.RedSpartanHelmet)|| stack.getItem().equals(halocraft.Main.RedSpartanChestplate)|| stack.getItem().equals(halocraft.Main.RedSpartanBoots)){
			return "halocraft:textures/armor/RedHaloArmor_layer_1.png";
		}
		
		if(stack.getItem().equals(halocraft.Main.RedSpartanLeggings)){
			return "halocraft:textures/armor/RedHaloArmor_layer_2.png";
		}
		if(stack.getItem().equals(halocraft.Main.GreenSpartanHelmet)|| stack.getItem().equals(halocraft.Main.GreenSpartanChestplate)|| stack.getItem().equals(halocraft.Main.GreenSpartanBoots)){
			return "halocraft:textures/armor/GreenHaloArmor_layer_1.png";
		}
		
		if(stack.getItem().equals(halocraft.Main.GreenSpartanLeggings)){
			return "halocraft:textures/armor/GreenHaloArmor_layer_2.png";
		}
		if(stack.getItem().equals(halocraft.Main.BlueSpartanHelmet)|| stack.getItem().equals(halocraft.Main.BlueSpartanChestplate)|| stack.getItem().equals(halocraft.Main.BlueSpartanBoots)){
			return "halocraft:textures/armor/BlueHaloArmor_layer_1.png";
		}
		
		if(stack.getItem().equals(halocraft.Main.BlueSpartanLeggings)){
			return "halocraft:textures/armor/BlueHaloArmor_layer_2.png";
		}
		else return null;
	}
	public void onArmorTickUpdate(World world, EntityPlayer player, ItemStack itemstack)
	{
		if (itemstack == new ItemStack(halocraft.Main.SpartanHelmet) || itemstack == new ItemStack(halocraft.Main.GreenSpartanHelmet) || itemstack == new ItemStack(halocraft.Main.RedSpartanHelmet) || itemstack == new ItemStack(halocraft.Main.BlueSpartanHelmet))
		{
            if(Minecraft.getMinecraft().gameSettings.thirdPersonView == 0)
            {
                    GL11.glPushAttrib(GL11.GL_ALL_ATTRIB_BITS);
                   
                    WorldRenderer worldRenderer = Tessellator.getInstance().getWorldRenderer();
                   
                    ScaledResolution scale = new ScaledResolution(Minecraft.getMinecraft().gameSettings, Minecraft.getMinecraft().displayWidth, Minecraft.getMinecraft().displayHeight);
                    int width = scale.getScaledWidth();
                    int height = scale.getScaledHeight();
                   
                    GL11.glDisable(GL11.GL_DEPTH_TEST);
                    GL11.glDepthMask(false);
                    GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
                    GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
                    GL11.glDisable(GL11.GL_ALPHA_TEST);
                    GL11.glBindTexture(GL11.GL_TEXTURE_2D, Minecraft.getMinecraft().renderEngine.getTexture("%blur%/armor/MiningHelmetblur.png"));
                   
                    worldRenderer.startDrawingQuads();
                    worldRenderer.addVertexWithUV(0.0D, (double)height, 90.0D, 0.0D, 1.0D);
                    worldRenderer.addVertexWithUV((double)width, (double)height, 90.0D, 1.0D, 1.0D);
                    worldRenderer.addVertexWithUV((double)width, 0.0D, 90.0D, 1.0D, 0.0D);
                    worldRenderer.addVertexWithUV(0.0D, 0.0D, 90.0D, 0.0D, 0.0D);
                    Tessellator.getInstance().draw();
                    
                    GL11.glPopAttrib();
            }
		}
	}
}
