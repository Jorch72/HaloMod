package halocraft;

import java.util.Random;
import net.minecraft.world.World;
import net.minecraft.world.chunk.IChunkProvider;
import net.minecraft.world.gen.feature.WorldGenMinable;
import net.minecraftforge.fml.common.IWorldGenerator;

public class HaloGenerationClass implements IWorldGenerator{

	@Override
	public void generate(Random random, int chunkX, int chunkZ, World world, IChunkProvider chunkGenerator, IChunkProvider chunkProvider) {
		
		switch(world.provider.getDimensionId()){
		case -1:
			generateInNether(world, random, chunkX * 16, chunkZ * 16);
			break;
		case 0:
			generateInOverWorld(world, random, chunkX * 16, chunkZ * 16);
			break;
		case 1:
			generateInEnd(world, random, chunkX * 16, chunkZ * 16);
			break;
		}
		
	}

	private void generateInEnd(World world, Random random, int x, int z) {
		// TODO Auto-generated method stub
		
	}

	private void generateInOverWorld(World world, Random random, int x, int z) {
		// TODO Auto-generated method stub
		for(int i = 0; i<25; i++){
			int ChunkX = x + random.nextInt(16);
			int ChunkY = random.nextInt(35);
			int ChunkZ = z + random.nextInt(16);
			(new WorldGenMinable(Main.HaloOre, 13)).generate(world, random, ChunkX, ChunkY, ChunkZ);
		}
	}

	private void generateInNether(World world, Random random, int x, int z) {
		// TODO Auto-generated method stub
		
	}

}
